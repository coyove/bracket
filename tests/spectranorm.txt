set n = 0   
set nCPU = 4 

function A(i, j)
    return ((i+j)*(i+j+1)/2 + i + 1)
end
 

function TimesVec(v, n, u, wg)
    set ul = len(u)
    set i = 0 for i < n , i = i + 1 do
        set vi = 0
        set j = 0 for j < ul , j = j + 1 do
            vi = vi + u[j] / A(i, j)
        end
        v[i] = vi
    end
end

function TimesTranspVec(v, n, u, wg)
    set ul = len(u)
    set i = 0 for i < n , i = i + 1 do
        set vi = 0
        set j = 0 for j < ul , j = j + 1 do
            vi = vi + u[j] / A(j, i)
        end
        v[i] = vi
    end
end

function ATimesTransp(v, u)
    set x = std.genlist(len(u))
    set wg = std.sync.waitgroup()

        TimesVec(x, len(v), u, wg)
        TimesTranspVec(v, len(v), x, wg)
end

n = 550
set u = {}
set v = {}

#dup(u, function (i) u[i] = 1 end)

set idx = 0 for idx < n , idx =idx+1 do
    u[idx] = 1
    v[idx] = 0
end

set i = 0 for i < 10 , i = i + 1 do
    ATimesTransp(v, u)
    ATimesTransp(u, v)
end

set vBv, vv = 0
dup(v, function(i, x)
    vBv = vBv + u[i] * x
    vv = vv + x * x
end)

io.println(math.sqrt(vBv/vv))
    