var count = 1;
var idx = 0;
var flag = 0;

for (1) {
    idx = idx+1;
    if (count == 4 && !flag) {
        count = count / 2;
        flag = 1;
        continue;
    }
    count = count * 2;
    if (count == 8) {break;}
}

assert idx == 5;

var m = {};

var i = 0; for (;i < 8;i=i+1) {
    var l = {};
    var j = 0; for (;j < 8; j = j + 2){
        if (j < 2) {continue;}
        if (j > 4) {break;}
        l[j/2+i ] = j;
    }
    if (i < 2) {continue;}
    if (i > 6) {break;}
    m[i] = l;
}

var m2 = {
    2:{
        2+1:2,
        2+2:4
    },
    3:{
        3+1:2,
        3+2:4
    },
    4:{
        4+1:2,
        4+2:4
    },
    5:{
        5+1:2,
        5+2:4
    },
    6:{
        6+1:2,
        6+2:4
    }
};

assert (m==m2);

var a = 0, b = 0;
for (;a<10;) {
    b=b+1;
    if (b == 5) continue;
    a=a+1;
}

assert b == 11;

var a = 0, b = 0;
for (; a<10;a=a+1) {
    b=b+1;
    if (b == 5) continue; ;
}

assert b == 10;

var   b = 0;
for (var a = 0 ; ;a=a+1) {
    b=b+2;
    if (b == 6) break;
}
assert a == 2;
 

var a = copy({1,2,3}, func(i,a) {
    yield "1";
    yield "2";
    yield "3";
});

assert a =={"1","2","3"};
