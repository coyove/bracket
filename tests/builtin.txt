
function foo1(c)
    set a = 3 * c
    set b = 2 * c
    return stack()
end

set ans = foo1()(2)
assert ans[-1] == 4 and ans[-2] == 6

function sum()
    set x = dup(stack())
    set s = 0
    if typeof(x[0]) == "string" then s = "" end

    dup(x, function(i, n) s = s + n end)
    return s
end

assert sum(1, -1) == 0
assert sum(1, 2, 3) == 6
assert sum("1", "2") == ("123")(0,2)

set m = map 
    "c" = 123, 
    "a" = "a",
    "incr" = function()
        set c = who()
        c.c = c.c + 1
        return c
    end
end
set mp = m
set  m2 = dup(m)

m.incr()
assert m.c == 124
mp.incr()
assert m.c == 125

m2.incr().incr()

assert m.c == 125
assert m2.c == 125

function errtest(a, b)
    if b == 0 then 
        error("divided by zero")
        return
    else
        return a / b
    end
end

assert errtest(1, 2) == 0.5
errtest(1, 1 - 1)
assert error() == "divided by zero"

set a = list 1,2,3 end
dup(a, function(i, v) a[i] = v + 1 end)
assert a == list 2,3,4 end

a = "hello world"
set upper = function(i, r) if i == 0 then return r - 32 else return r end end
dup(a, upper)
assert a == "hello world"
a = dup(a, upper)
assert a == "Hello world"

assert typeof(a) == "string"
a = core.bytes(a)
assert typeof(a, bytes)