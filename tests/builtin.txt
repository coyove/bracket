var dz =(1) 
assert dz == 1 

fun var sum() {
    var x = arguments
    var s = 0 
    if typeof x[0] == "str" { 
        s = "" 
    }

    foreach i, n = x
        s =s + n
    return s 
}

assert sum(1, -1) == 0 
assert sum(1, 2, 3) == 6  
assert sum("1", "2") == "12" 

var m = {
    "c": 123, 
    "a": "a",
    "incr": fun(this) {
        this.c = this.c + 1 
        return this 
    }
} 

var mp = m 
var  m2 = (m) ()

m.incr() 
assert m.c == 124 
mp.incr() 
assert m.c == 125 

m2.incr().incr() 

assert m.c == 125 
assert m2.c == 125 

var a = {1,2,3} 
foreach i,v  = a a[i] = v + 1
assert a == {2,3,4} 

a = "hello world" 
var upper = fun(i, r) { if (i == 0 ) { return r - 32  } else { return r }} 
assert a == "hello world" 
// assert "" & a == "Hello world" 

a={}
assert typeof a + "a" == "mapa" 
assert typeof (a << {"a"}) == "map" 

// a = for(a, fun(i,b) { if (i == 5) { error(true) end return b end) 
// assert "" & a == "Hello" 

a = {
    (fun() {return "key" })() : "value",
} 
assert a.key == "value" and a["key"] == "value" 

assert(atoi("0x0")) == 0 
assert(atoi("0xa")) == 10 
assert(atoi("0xA")) == 10 
assert(atoi("1")) == 1 
assert(atoi("+0.0")) == 0.0 
assert(atoi("0i12345678")) == 0i12345678 
assert(atoi("-10e-2")) == -10e-2 
assert(atoi("1.2a")) == nil 
assert(atoi("0xabcdefg")) == nil 

var a = 0i0000000000000001 
var a = 0i0000000000001000 
var a = 0i4000000000000000 
var a = 0i3ff0000000000000 
assert a == 1

var a = {1,2,3,4} 
assert a[2:3] == {3} 
